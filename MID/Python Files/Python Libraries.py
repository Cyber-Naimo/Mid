# -*- coding: utf-8 -*-
"""Q1_Python Libraries.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rC5-BcMdEjmi2MAKQIeIt8JYIVw-OHjG
"""

import spacy
nlp = spacy.load("en_core_web_sm")
#string= "the purpose of our life is to happy"
#doc =nlp(string)
#for token in doc:
#print(token)     ---end1
#print(token.text, end =' | ')   ---end2
def generate_word_groups(text, n):
    # Tokenize the input text
    doc = nlp(text)
    words = [token.text for token in doc]

    # Generate word groups
    word_groups = [tuple(words[i:i+n]) for i in range(len(words)-n+1)]

    return word_groups

# Example usage
text = "the purpose of our life is to happy"
word_groups = generate_word_groups(text, 2)
print(word_groups)

from spacy import displacy
doc = nlp('the purpose of our life is to happy')
displacy.render(doc, style='dep',jupyter= True , options = {'distance ': 90} )

import spacy
doc8 = nlp(u"Apple to build a HongKong factory for 3$ billions")
for ent in doc8.ents:
  print(ent.text+ '.'+ent.label_+'.'+str(spacy.explain(ent.label_)))
  len(doc8.ents)
  print(doc8.ents)

#pie chart
import matplotlib.pyplot  as plt
import numpy as np
firms = ["firm A ","Firm B", "Firm C"]
market_share = [20,15,25]
Explode = [0,0.1,0]
plt.pie(market_share,explode=Explode, labels=firms , shadow =True, startangle = 45)
plt.axis('equal')
plt.legend(title = "list of firms")
plt.show()

#scatter
import matplotlib.pyplot as plt
age = [10, 20, 30, 40, 50]
weight = [35, 45, 55, 65, 75]
smoking_status = ['No', 'Yes', 'No', 'Yes', 'No']

plt.figure(figsize=(8, 6))
for i, status in enumerate(smoking_status):
    if status == 'Yes':
        plt.scatter(age[i], weight[i], color='red', label='Smoker')
    else:
        plt.scatter(age[i], weight[i], color='blue', label='Non-smoker')

plt.title('Disadvantages of Smoking with Increasing Age and Weight')
plt.xlabel('Age')
plt.ylabel('Weight')
plt.legend()
plt.grid(True)
plt.show()

#histogram
import matplotlib.pyplot as plt
import numpy as np

heights = np.random.normal(loc=170, scale=10, size=250)  # Mean=170, Standard Deviation=10, Size=250

plt.hist(heights, bins=20, color='skyblue', edgecolor='black')  # Using 20 bins for better visualization
plt.title('Height Distribution of 250 People')
plt.xlabel('Height (cm)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

#bar graph
import matplotlib.pyplot as plt
import numpy as np
Divisions =  ["div A ","div B", "div C"]
avg_marks=[2,4,7]
plt.bar(Divisions,avg_marks,color='green')
plt.title('bar graph')
plt.xlabel('divisions')
plt.ylabel('marks')
plt.show()

#stack bar graph
import matplotlib.pyplot as plt
import numpy as np
Divisions =  ["div A ","div B", "div C"]
boy_avg_marks=[2,4,7]
girl_avg_marks=[8,9,10]
index = np.arange(3)
width=0.30
plt.bar(index,boy_avg_marks,width,color='green',label='boy avg marks')
plt.bar(index,girl_avg_marks,width,color='blue',label='girl avg marks',bottom=boy_avg_marks)
plt.title('bar graph')
plt.xlabel('divisions')
plt.ylabel('marks')
plt.show()